{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAG3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXIN,SAASC,cAAc,UAc/Ba,iBAAiB,SAE1B,SAAwBC,GACtBA,EAAGC,iBACH,IAAIC,EAASC,OAAOf,EAAYgB,OAC5BC,EAAQF,OAAOnB,EAAWoB,OAC1BE,EAAOH,OAAOhB,EAAUiB,OACxBG,EAAWF,EAEf,IAAK,IAAIG,EAAI,EAAGA,GAAKN,EAAQM,IAC3BnB,EAAcmB,EAAGD,GACdE,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAGnDgB,EAAWF,EAAQG,EAAIF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelay = document.querySelector(\"input[name='delay']\");\nconst inputStep = document.querySelector(\"input[name='step']\");\nconst inputAmount = document.querySelector(\"input[name='amount']\");\nconst inputBtn = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\ninputBtn.addEventListener('click', submitFunction);\n\nfunction submitFunction(ev) {\n  ev.preventDefault();\n  let amount = Number(inputAmount.value);\n  let delay = Number(inputDelay.value);\n  let step = Number(inputStep.value);\n  let newDelay = delay;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    newDelay = delay + i * step;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","ev","preventDefault","amount","Number","value","delay1","step","newDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.cced3f53.js.map"}